version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env # Load environment variables from .env file
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`app.traefik.me`)"
      - "traefik.http.services.app.loadbalancer.server.port=8080"

  db:
    image: postgres:15-alpine
    env_file:
      - .env # Share the same .env file for database credentials
    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine

    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    image: traefik:v2.10
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.dashboard=true
      - --log.level=INFO
    ports:
      - "80:80"         # Incoming HTTP traffic
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro


volumes:
  postgres_data:
  redis_data:
